@model PNTProyecto.Models.Publicacion

@{
    ViewData["Title"] = "Detalles de Publicación";
    var currentUserId = ViewBag.UserId;
}

<h2>Detalles de Publicación</h2>

<div>
    <h4>Publicación</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NombreMascota)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NombreMascota)
        </dd>
        <dt class="col-sm-2">
            Imagen
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.Imagen))
            {
            <img src="@Model.Imagen" alt="@Model.NombreMascota" style="max-width: 200px;" />
            }
            else
            {
            <p>No hay imagen disponible.</p>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Descripcion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Descripcion)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TipoMascota)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TipoMascota)
        </dd>
    </dl>
</div>

<div>
    @if (Model.UsuarioId == currentUserId)
{
    <ul><a asp-action="Edit" asp-route-id="@Model.nroPublicacion">Editar</a> </ul>
}
</div>

<div>
    @if (Model.UsuarioId != currentUserId)
    {
    <button type="button" onclick="toggleMeGusta(@Model.nroPublicacion)" class="btn btn-info">Me Gusta</button>
    }
</div>

<div>
    @if (Model.UsuarioId == currentUserId)
    {
    <h4>Usuarios Interesados</h4>
    <ul>
        @foreach (var userId in Model.UsuarioInteresado?.Split(',') ?? new string[0])
            {
        <li><a asp-controller="Usuarios" asp-action="Details" asp-route-id="@userId">Usuario @userId</a></li>
            }
    </ul>
    }
    <a asp-action="Index">Volver al listado</a>
</div>

@section Scripts {
    <script>
        async function toggleMeGusta(publicacionId) {

            const response = await fetch('/Publicaciones/ToggleMeGusta', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ publicacionId })
            });

            if (response.ok) {
                alert('La acción se ha completado con éxito.');
            } else {
                alert('Hubo un error al realizar la acción.');
            }
        }
    </script>
}

<style>
    .card {
        margin: 20px auto;
        max-width: 600px;
        border: 1px solid #4CAF50;
        border-radius: 10px;
    }

    .card-header {
        font-size: 1.25rem;
    }

    .font-weight-bold {
        font-weight: bold;
    }

    .text-center {
        text-align: center;
    }

    .text-success {
        color: #4CAF50;
    }

    .bg-success {
        background-color: #4CAF50;
    }

    .text-white {
        color: white;
    }

    .img-fluid {
        max-width: 100%;
        height: auto;
    }

    .rounded {
        border-radius: 10px;
    }

    .me-2 {
        margin-right: 0.5rem;
    }

    .mt-4 {
        margin-top: 1.5rem;
    }
</style>
