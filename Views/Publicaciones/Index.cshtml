@model IEnumerable<PNTProyecto.Models.Publicacion>

@{
    ViewData["Title"] = "Publicaciones";
}

<div class="filter-bar-container">
    <div class="filter-bar">
        <select id="FiltroDeBusqueda" onchange="filtrarPublicaciones()">
            <option value="">Todas las publicaciones</option>
            <option value="perro">Perro</option>
            <option value="gato">Gato</option>
            <option value="ave">Ave</option>
            <option value="pez">Pez</option>
            <option value="roedor">Roedor</option>
        </select>
    </div>
</div>

<div class="publicaciones-grid">
    @foreach (var item in Model)
    {
        <div class="publicacion-card tipo-@item.TipoMascota.ToLower()">
            <button type="button" class="publicacion-button" onclick="redirectToDetails('@item.nroPublicacion')">
                <h2>@item.NombreMascota</h2>
                <img src="@item.Imagen" alt="@item.NombreMascota" />
                <p class="descripcion-publicacion">@Truncate(item.Descripcion, 100)</p> <!-- esto limita la descripcion a los primeros 100 caracteres, para que no se deformen o sean una distinta a otra. -->
                <p>UsuarioCreadorId: @item.UsuarioId</p>
                <td>
                    <i class="fas fa-heart"></i> @item.CantidadUsuariosInteresados
                </td>
                <p>
                    @if (item.TipoMascota.ToLower() == "gato")
                    {
                        <i class="fas fa-cat"></i>
                    }
                    else if (item.TipoMascota.ToLower() == "perro")
                    {
                        <i class="fas fa-dog"></i>
                    }
                    else if (item.TipoMascota.ToLower() == "ave")
                    {
                        <i class="fas fa-dove"></i>
                    }
                    else if (item.TipoMascota.ToLower() == "roedor")
                    {
                        <i class="fas fa-otter"></i>
                    }
                    else
                    {
                        <i class="fas fa-fish"></i>
                    }
                </p>
            </button>
        </div>
    }
</div>

@section Scripts {
    <script>
        function redirectToDetails(nroPublicacion) {
            window.location.href = '/Publicaciones/Details/' + nroPublicacion;
        }

        function filtrarPublicaciones() {
            var filtro = document.getElementById('FiltroDeBusqueda').value.toLowerCase();
            var publicaciones = document.querySelectorAll('.publicacion-card');

            publicaciones.forEach(function (pub) {
                var tipoMascota = pub.classList[1];

                if (filtro === '' || tipoMascota === 'tipo-' + filtro) {
                    pub.style.display = 'flex';
                } else {
                    pub.style.display = 'none';
                }
            });
        }
    </script>
}

@functions {
    public string Truncate(string input, int length)
    {
        if (input.Length <= length)
            return input;
        else
            return input.Substring(0, length) + "...";
    }
}

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #1a1a1a;
        color: #eee; /* color del texto en general */
    }

    .filter-bar-container {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 10px;
    }

    .filter-bar {
        margin-right: 10px;
    }

        .filter-bar select {
            padding: 8px;
            font-size: 16px;
            background-color: #444;
            color: #eee;
            border: none;
            border-radius: 4px;
        }

    .publicaciones-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 16px;
        padding: 16px;
        justify-content: center;
    }

    .publicacion-card {
        background-color: #333;
        padding: 16px;
        border-radius: 8px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s;
        width: 300px; /* Ancho fijo para todas las tarjetas */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        overflow: hidden; /* Oculta cualquier contenido que desborde */
    }

        .publicacion-card:hover {
            transform: scale(1.03);
        }

        .publicacion-card h2 {
            color: #4CAF50;
            margin-bottom: 10px;
        }

        .publicacion-card img {
            max-width: 100%;
            height: 250px; /* Altura fija para las imágenes */
            object-fit: cover; /* Asegura que la imagen se ajuste sin distorsionarse */
            border-radius: 8px;
        }

        .publicacion-card p {
            color: #000; /* Color del texto a negro */
            margin-top: 10px;
            overflow: hidden; /* Oculta cualquier desbordamiento */
            text-overflow: ellipsis; /* Añade puntos suspensivos al final del texto cuando se corta */
            white-space: nowrap; /* Evita que el texto se rompa */
        }

    .descripcion-publicacion {
        font-size: 18px; /* Tamaño de la descripción */
    }
</style>
