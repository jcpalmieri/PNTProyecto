@model PNTProyecto.Models.Usuario

@{
    ViewData["Title"] = "Edit";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="~/css/site.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #1a1a1a;
            color: #eee;
            margin: 0;
            padding: 0;
        }

        .container {
            width: 80%;
            margin: 0 auto;
            padding: 20px;
        }

        h1 {
            color: #4CAF50;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            color: #4CAF50;
            font-weight: bold;
        }
       
        p {
            color: #4CAF50;
            font-weight: bold;
        }
        input[type="text"],
        input[type="email"],
        input[type="password"],
        input[type="file"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            background-color: #fff;
            color: #333;
        }

        .btn-primary {
            background-color: #4CAF50;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

            .btn-primary:hover {
                background-color: #45a049;
            }

        .text-danger {
            color: #f44336;
        }

        .profile-image {
            max-width: 150px;
            max-height: 150px;
            border-radius: 50%;
            display: block;
            margin: 0 auto 20px;
        }

        .preview-image {
            width: 150px; 
            height: 150px; 
            object-fit: cover; /* Para mantener las proporciones */
        }


    </style>
</head>
<body>
    <div class="container">
        <h1>Edit</h1>
        <h4>Usuario</h4>
        <hr />
        @using (Html.BeginForm("Edit", "Usuarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.UsuarioId)

            <div class="form-group">
                @Html.Label("Imagen de Perfil Actual")
                @if (!string.IsNullOrEmpty(Model.ImagenPerfil))
                {
                    <img src="@Model.ImagenPerfil" alt="Imagen de Perfil" class="profile-image" />
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImagenPerfilFile, "Cambiar Imagen de Perfil")
                <input type="file" name="ImagenPerfilFile" class="form-control" accept=".jpg, .jpeg, .png" onchange="previewImage(event)" />
                @Html.ValidationMessageFor(model => model.ImagenPerfilFile, "", new { @class = "text-danger" })
            </div>
            <div class="form-group preview">
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NombreUsuario)
                @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono)
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>

           
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        }
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            function previewImage(event) {
                var reader = new FileReader();
                reader.onload = function () {
                    var output = document.createElement('img');
                    output.src = reader.result;
                    output.classList.add('preview-image');
                    var container = document.querySelector('.preview');
                    container.innerHTML = '';
                    container.appendChild(output);
                };
                reader.readAsDataURL(event.target.files[0]);
            }
        </script>
    }

</body>
</html>
